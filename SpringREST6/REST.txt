 REST.txt
 
 REST(Representational State Transfer) - 데이터를 처리할 수 있게 만든 주소 표현 방법
 	=> 하나의 URI가 고유한 리소스(데이터)를 처리하는 공통방식
 	=> Open API(REST방식) => REST API => Restful하게 구현
 	=> 리소스를 이름(URI)으로 구분해서 리소스의 상태를 주고받는 API방식
 
 	
 * REST API 방식 개발 원칙(제약조건)
 	- Client-Server
 	- StateLess
 	- Cacheable
 	- Uniform Interface
 		=> 리소스가 URI로 식별되어야 함
 		   리소스를 생성, 수정, 삭제 동작에 따른 HTTP 메서드 표현
 		   동작(메시지) 스스로 설명을 할 수 있어야 함
 		   애플리케이션의 상태는 하이퍼링크로 이동가능해야 함
 	- Layered System
 	- Code on demand
 
 	
 * REST API 사용법
 	- URI에는 동사(X), 명사(O) 표현
 		=> /students/100 (O)
 		=> /get-student?stuid=100 (X)
 		
 	- 동사를 HTTP 메서드로 표현
 		=> GET / POST / PUT(PATCH) / DELETE
 		  Read  Create   Update      Delete
 		  
 	- 주소를 슬래시(/)를 사용해서 계층관계를 표현
 	  (URI의 마지막에는 / 사용X)
 	  http://localhost/member/ (X)
 	  http://localhost/member (O)
 	  
 	- URI 가독성을 높이기 위해서 하이픈(-)
 	  (밑줄(_) 사용X)
 	  
 	- URI는 소문자로 작성
 	- 파일 확장자는 포함X
 	- Document (문서, 객체) => 단수
 	  Collection (문서들의 집합, 객체의 집합) => 복수
 
 
 p.353
 * URL : Uniform Resource Locator 		=> 사용자가 원하는 값이 있는 곳이 있다
 	http://www.naver.com/
 	http://localhost:8088/member/
 
 * URI : Uniform Resource Identifier 	=> 사용자가 원하는 값이 있는 곳의 주소
 	/
 	/member/
 
 
 * 스프링에서는 RESTful한 개발을 하기 위해서 
 	스프링3.xxx -> @ResponseBody 지원 (메서드, 리턴타입)
 	스프링4.xxx -> @RestController 지원
 
 
 
 
 
 